{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./ExpoSMS","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":67},"end":{"line":2,"column":32,"index":99}}],"key":"ASTzgHkUNMXHoQ3+33X/d6QBjLk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.sendSMSAsync = sendSMSAsync;\n  exports.isAvailableAsync = isAvailableAsync;\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _ExpoSMS = require(_dependencyMap[1], \"./ExpoSMS\");\n  var ExpoSMS = _interopDefault(_ExpoSMS);\n  function processAttachments(attachments) {\n    if (!attachments) {\n      return null;\n    }\n    attachments = Array.isArray(attachments) ? attachments : [attachments];\n    if (_expoModulesCore.Platform.OS === 'android' && attachments.length > 1) {\n      if (__DEV__) {\n        console.warn('Android only supports a single attachment. The first array item is used.');\n      }\n      attachments = attachments.slice(0, 1);\n    }\n    return attachments;\n  }\n  // @needsAudit\n  /**\n   * Opens the default UI/app for sending SMS messages with prefilled addresses and message.\n   *\n   * @param addresses An array of addresses (phone numbers) or single address passed as strings. Those\n   * would appear as recipients of the prepared message.\n   * @param message Message to be sent.\n   * @param options A `SMSOptions` object defining additional SMS configuration options.\n   *\n   * @return Returns a Promise that fulfils with the SMS action is invoked by the user, with corresponding result:\n   * - If the user cancelled the SMS sending process: `{ result: 'cancelled' }`.\n   * - If the user has sent/scheduled message for sending: `{ result: 'sent' }`.\n   * - If the status of the SMS message cannot be determined: `{ result: 'unknown' }`.\n   *\n   * Android does not provide information about the status of the SMS message, so on Android devices\n   * the Promise will always resolve with `{ result: 'unknown' }`.\n   *\n   * > Note: The only feedback collected by this module is whether any message has been sent. That\n   * means we do not check actual content of message nor recipients list.\n   *\n   * @example\n   * ```ts\n   * const { result } = await SMS.sendSMSAsync(\n   *   ['0123456789', '9876543210'],\n   *   'My sample HelloWorld message',\n   *   {\n   *     attachments: {\n   *       uri: 'path/myfile.png',\n   *       mimeType: 'image/png',\n   *       filename: 'myfile.png',\n   *     },\n   *   }\n   * );\n   * ```\n   */\n  async function sendSMSAsync(addresses, message, options) {\n    if (!ExpoSMS.default.sendSMSAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-sms', 'sendSMSAsync');\n    }\n    const finalAddresses = Array.isArray(addresses) ? addresses : [addresses];\n    finalAddresses.forEach(address => {\n      if (address === null || address === undefined) {\n        throw new TypeError('undefined or null address');\n      }\n    });\n    const finalOptions = {\n      ...options\n    };\n    if (options?.attachments) {\n      finalOptions.attachments = processAttachments(options?.attachments) || undefined;\n    }\n    return ExpoSMS.default.sendSMSAsync(finalAddresses, message, finalOptions);\n  }\n  // @needsAudit\n  /**\n   * Determines whether SMS is available. Always returns `false` in the iOS simulator, and in browser.\n   *\n   * @return Returns a promise that fulfils with a `boolean`, indicating whether SMS is available on this device.\n   *\n   * @example\n   * ```ts\n   * const isAvailable = await SMS.isAvailableAsync();\n   * if (isAvailable) {\n   *   // do your SMS stuff here\n   * } else {\n   *   // misfortune... there's no SMS available on this device\n   * }\n   * ```\n   */\n  async function isAvailableAsync() {\n    return ExpoSMS.default.isAvailableAsync?.() ?? false;\n  }\n});","lineCount":102,"map":[[12,2,51,0,"exports"],[12,9,51,0],[12,10,51,0,"sendSMSAsync"],[12,22,51,0],[12,25,51,0,"sendSMSAsync"],[12,37,51,0],[13,2,85,0,"exports"],[13,9,85,0],[13,10,85,0,"isAvailableAsync"],[13,26,85,0],[13,29,85,0,"isAvailableAsync"],[13,45,85,0],[14,2,1,0],[14,6,1,0,"_expoModulesCore"],[14,22,1,0],[14,25,1,0,"require"],[14,32,1,0],[14,33,1,0,"_dependencyMap"],[14,47,1,0],[15,2,2,0],[15,6,2,0,"_ExpoSMS"],[15,14,2,0],[15,17,2,0,"require"],[15,24,2,0],[15,25,2,0,"_dependencyMap"],[15,39,2,0],[16,2,2,0],[16,6,2,0,"ExpoSMS"],[16,13,2,0],[16,16,2,0,"_interopDefault"],[16,31,2,0],[16,32,2,0,"_ExpoSMS"],[16,40,2,0],[17,2,3,0],[17,11,3,9,"processAttachments"],[17,29,3,27,"processAttachments"],[17,30,3,28,"attachments"],[17,41,3,39],[17,43,3,41],[18,4,4,4],[18,8,4,8],[18,9,4,9,"attachments"],[18,20,4,20],[18,22,4,22],[19,6,5,8],[19,13,5,15],[19,17,5,19],[20,4,6,4],[21,4,7,4,"attachments"],[21,15,7,15],[21,18,7,18,"Array"],[21,23,7,23],[21,24,7,24,"isArray"],[21,31,7,31],[21,32,7,32,"attachments"],[21,43,7,43],[21,44,7,44],[21,47,7,47,"attachments"],[21,58,7,58],[21,61,7,61],[21,62,7,62,"attachments"],[21,73,7,73],[21,74,7,74],[22,4,8,4],[22,8,8,8,"Platform"],[22,24,8,16],[22,25,8,16,"Platform"],[22,33,8,16],[22,34,8,17,"OS"],[22,36,8,19],[22,41,8,24],[22,50,8,33],[22,54,8,37,"attachments"],[22,65,8,48],[22,66,8,49,"length"],[22,72,8,55],[22,75,8,58],[22,76,8,59],[22,78,8,61],[23,6,9,8],[23,10,9,12,"__DEV__"],[23,17,9,19],[23,19,9,21],[24,8,10,12,"console"],[24,15,10,19],[24,16,10,20,"warn"],[24,20,10,24],[24,21,10,25],[24,95,10,99],[24,96,10,100],[25,6,11,8],[26,6,12,8,"attachments"],[26,17,12,19],[26,20,12,22,"attachments"],[26,31,12,33],[26,32,12,34,"slice"],[26,37,12,39],[26,38,12,40],[26,39,12,41],[26,41,12,43],[26,42,12,44],[26,43,12,45],[27,4,13,4],[28,4,14,4],[28,11,14,11,"attachments"],[28,22,14,22],[29,2,15,0],[30,2,16,0],[31,2,17,0],[32,0,18,0],[33,0,19,0],[34,0,20,0],[35,0,21,0],[36,0,22,0],[37,0,23,0],[38,0,24,0],[39,0,25,0],[40,0,26,0],[41,0,27,0],[42,0,28,0],[43,0,29,0],[44,0,30,0],[45,0,31,0],[46,0,32,0],[47,0,33,0],[48,0,34,0],[49,0,35,0],[50,0,36,0],[51,0,37,0],[52,0,38,0],[53,0,39,0],[54,0,40,0],[55,0,41,0],[56,0,42,0],[57,0,43,0],[58,0,44,0],[59,0,45,0],[60,0,46,0],[61,0,47,0],[62,0,48,0],[63,0,49,0],[64,0,50,0],[65,2,51,7],[65,17,51,22,"sendSMSAsync"],[65,29,51,34,"sendSMSAsync"],[65,30,51,35,"addresses"],[65,39,51,44],[65,41,51,46,"message"],[65,48,51,53],[65,50,51,55,"options"],[65,57,51,62],[65,59,51,64],[66,4,52,4],[66,8,52,8],[66,9,52,9,"ExpoSMS"],[66,16,52,16],[66,17,52,16,"default"],[66,24,52,16],[66,25,52,17,"sendSMSAsync"],[66,37,52,29],[66,39,52,31],[67,6,53,8],[67,12,53,14],[67,16,53,18,"UnavailabilityError"],[67,32,53,37],[67,33,53,37,"UnavailabilityError"],[67,52,53,37],[67,53,53,38],[67,63,53,48],[67,65,53,50],[67,79,53,64],[67,80,53,65],[68,4,54,4],[69,4,55,4],[69,10,55,10,"finalAddresses"],[69,24,55,24],[69,27,55,27,"Array"],[69,32,55,32],[69,33,55,33,"isArray"],[69,40,55,40],[69,41,55,41,"addresses"],[69,50,55,50],[69,51,55,51],[69,54,55,54,"addresses"],[69,63,55,63],[69,66,55,66],[69,67,55,67,"addresses"],[69,76,55,76],[69,77,55,77],[70,4,56,4,"finalAddresses"],[70,18,56,18],[70,19,56,19,"forEach"],[70,26,56,26],[70,27,56,28,"address"],[70,34,56,35],[70,38,56,40],[71,6,57,8],[71,10,57,12,"address"],[71,17,57,19],[71,22,57,24],[71,26,57,28],[71,30,57,32,"address"],[71,37,57,39],[71,42,57,44,"undefined"],[71,51,57,53],[71,53,57,55],[72,8,58,12],[72,14,58,18],[72,18,58,22,"TypeError"],[72,27,58,31],[72,28,58,32],[72,55,58,59],[72,56,58,60],[73,6,59,8],[74,4,60,4],[74,5,60,5],[74,6,60,6],[75,4,61,4],[75,10,61,10,"finalOptions"],[75,22,61,22],[75,25,61,25],[76,6,62,8],[76,9,62,11,"options"],[77,4,63,4],[77,5,63,5],[78,4,64,4],[78,8,64,8,"options"],[78,15,64,15],[78,17,64,17,"attachments"],[78,28,64,28],[78,30,64,30],[79,6,65,8,"finalOptions"],[79,18,65,20],[79,19,65,21,"attachments"],[79,30,65,32],[79,33,65,35,"processAttachments"],[79,51,65,53],[79,52,65,54,"options"],[79,59,65,61],[79,61,65,63,"attachments"],[79,72,65,74],[79,73,65,75],[79,77,65,79,"undefined"],[79,86,65,88],[80,4,66,4],[81,4,67,4],[81,11,67,11,"ExpoSMS"],[81,18,67,18],[81,19,67,18,"default"],[81,26,67,18],[81,27,67,19,"sendSMSAsync"],[81,39,67,31],[81,40,67,32,"finalAddresses"],[81,54,67,46],[81,56,67,48,"message"],[81,63,67,55],[81,65,67,57,"finalOptions"],[81,77,67,69],[81,78,67,70],[82,2,68,0],[83,2,69,0],[84,2,70,0],[85,0,71,0],[86,0,72,0],[87,0,73,0],[88,0,74,0],[89,0,75,0],[90,0,76,0],[91,0,77,0],[92,0,78,0],[93,0,79,0],[94,0,80,0],[95,0,81,0],[96,0,82,0],[97,0,83,0],[98,0,84,0],[99,2,85,7],[99,17,85,22,"isAvailableAsync"],[99,33,85,38,"isAvailableAsync"],[99,34,85,38],[99,36,85,41],[100,4,86,4],[100,11,86,11,"ExpoSMS"],[100,18,86,18],[100,19,86,18,"default"],[100,26,86,18],[100,27,86,19,"isAvailableAsync"],[100,43,86,35],[100,46,86,38],[100,47,86,39],[100,51,86,43],[100,56,86,48],[101,2,87,0],[102,0,87,1],[102,3]],"functionMap":{"names":["<global>","processAttachments","sendSMSAsync","finalAddresses.forEach$argument_0","isAvailableAsync"],"mappings":"AAA;ACE;CDY;OEoC;2BCK;KDI;CFQ;OIiB;CJE"},"hasCjsExports":false},"type":"js/module"}]}